{"version":3,"sources":["webpack:///./src/pages/page-2.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Card.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","title","to","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","m","module","exports","require","default","Card","props","react_default","className","style","float","textAlign","margin","fontSize","lineHeight","href","Layout","children","_856328897","Fragment","rel","display","alignItems","justifyContent","width","height","Card_Card","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"component---src-pages-page-2-js-deeeefec0833d3e58cff.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst SecondPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Page two\" />\r\n    <h1>Hi from the second page</h1>\r\n    <p>Welcome to page 2</p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default SecondPage\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\r\n\r\nimport \"./Card.css\"\r\n\r\nexport default function Card(props) {\r\n  \r\n  return (\r\n    <div\r\n      className={\"card\"}\r\n    >\r\n      <div\r\n        style={{\r\n          float: \"right\",\r\n          textAlign: \"right\",\r\n          margin: 0,\r\n          fontSize: \"20px\",\r\n          lineHeight: \"24px\"\r\n        }}\r\n        className={\"cardContent\"}\r\n      >\r\n        <a href=\"mailto:agrippakellum@gmail.com\">email</a>\r\n        <br />\r\n        <a href=\"https://github.com/asktree\">github</a>\r\n        <br />\r\n        <a href=\"https://twitter.com/about_agrippa\">twitter</a>\r\n        <br />\r\n        <a href=\"https://www.linkedin.com/in/agrippa-k-ba59579a/\">linkedin</a>\r\n        <br />\r\n        <a href=\"https://medium.com/@agrippakellum\">medium</a>\r\n      </div>\r\n      <div\r\n        style={{\r\n          margin:0,\r\n          fontSize: \"36px\",\r\n          lineHeight: \"40px\"\r\n        }}\r\n        className={\"cardName\"}\r\n      >\r\n        Agrippa\r\n        <br />\r\n        Spence\r\n        <br />\r\n        Kellum\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Card from './Card'\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <link href=\"https://fonts.googleapis.com/css?family=Roboto&display=swap\" rel=\"stylesheet\" />\r\n\r\n      <div\r\n        style={{\r\n          margin: 0,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          width: '100%',\r\n          height: '100%'\r\n        }}\r\n      >\r\n        <main><Card>{children}</Card>\r\n        </main>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}